/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: tmsp.i

package gomsp

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _goslice_ swig_type_2;
typedef _goslice_ swig_type_3;
typedef _goslice_ swig_type_4;
extern void _wrap_Swig_free_gomsp_f934737b8dfb1b3f(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_gomsp_f934737b8dfb1b3f(swig_intgo arg1);
extern swig_intgo _wrap_tMsp_Attach_gomsp_f934737b8dfb1b3f(short arg1);
extern swig_intgo _wrap_tMsp_Detach_gomsp_f934737b8dfb1b3f(void);
extern swig_intgo _wrap_tMsp_Put_gomsp_f934737b8dfb1b3f(swig_type_1 arg1, swig_intgo arg2, short arg3);
extern swig_intgo _wrap_tMsp_Get_gomsp_f934737b8dfb1b3f(swig_type_2 arg1, swig_type_3 arg2, swig_type_4 arg3, swig_intgo arg4);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_gomsp_f934737b8dfb1b3f(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_gomsp_f934737b8dfb1b3f(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func TMsp_Attach(arg1 uint16) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_tMsp_Attach_gomsp_f934737b8dfb1b3f(C.short(_swig_i_0)))
	return swig_r
}

func TMsp_Detach() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_tMsp_Detach_gomsp_f934737b8dfb1b3f())
	return swig_r
}

func TMsp_Put(arg1 string, arg2 int, arg3 uint16) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_tMsp_Put_gomsp_f934737b8dfb1b3f(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.short(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func TMsp_Get(arg1 []byte, arg2 []int, arg3 []uint16, arg4 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_tMsp_Get_gomsp_f934737b8dfb1b3f(*(*C.swig_type_2)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}


